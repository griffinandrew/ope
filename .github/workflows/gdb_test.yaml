name: gdb test
on:
  push:
    branches: container-base-ope
jobs:
  checksum:
    runs-on: ubuntu-latest #use the latest ubuntu container image 
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4 #use action to install python
        with:
          python-version: "3.9"
      - name: Install dependencies #requirements docs unable to read, hard installing dependencies 
        run: |
          pip install -r requirements/requirements.txt    
      - name: pull image (hard) # makes the container image build and then creates var with checksum value to be compared 
        run: |
          make build # using this to install gdb within the container and
          #docker pull quay.io/gaheyrich/ope:beta-base-ope-image
      - name: run gdb #creates var with checksum value to be compared 
        run: |
        
         IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | head -n 1)
         docker run -d --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -v /gdb_test_file.py:/home/jovyan/work --name stable $IMAGE
         echo "finished run"
         container_id=$(docker ps -qf "name=stable" | head -n 1)
         echo "about to copy"
         docker cp tests/gdb_test_file.py $container_id:/home/jovyan/work/gdb_test_file.py
         echo "copy to container"
         docker exec stable gdb -ex "python import sys; sys.path.append('.')" -ex "python import tests.gdb_test_file" -ex "break tests.gdb_test_file.divide" -ex "run" -ex "next" -ex "next" -ex "continue" -ex "set logging on /home/jovyan/my_gdb_output.txt" -ex "continue" -ex "quit"
         echo "run gdb"
         #docker exec stable realpath /home/jovyan/my_gdb_output.txt
         docker cp stable:/home/jovyan/my_gdb_output.txt .
         echo "Displaying GDB output"
         cat my_gdb_output.txt
         docker stop stable